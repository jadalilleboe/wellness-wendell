{"version":3,"sources":["img/design.png","components/Home.js","components/About.js","components/Navigation.js","components/Footer.js","components/hooks/usePhoneNumber.js","services/twilio.js","services/users.js","services/login.js","services/messages.js","components/ErrorNotification.js","components/SignUpPage.js","components/hooks/useForm.js","components/SignInPage.js","components/Welcome.js","components/SuccessNotification.js","components/dashboardComponents/Messages.js","components/hooks/useTime.js","components/dashboardComponents/AccountSettings.js","components/Dashboard.js","components/DeletedAccount.js","App.js","index.js"],"names":["Home","className","class","src","design","alt","height","width","style","margin","fontSize","About","title","frameborder","allow","allowfullscreen","href","Navigation","linkStyle","textDecoration","user","exact","to","Footer","usePhoneNumber","initialValues","useState","values","setValues","e","target","name","value","services","sendMessage","number","a","axios","post","response","data","code","baseUrl","userService","createUser","userObject","updatePhoneNumber","newNumber","token","window","localStorage","getItem","JSON","parse","put","headers","deleteUser","delete","verifyUniqueEmail","email","thisemail","loginServices","login","credentials","messageService","setToken","newToken","getUserMessages","get","saveMessage","messageObject","deleteMessage","messageID","ErrorNotification","message","SignUpPage","useForm","firstName","lastName","password","retypedPassword","handleChange","phoneNumber","setPhoneNumber","areaPrefix","first3","middle3","last4","phoneValues","handleNumberChange","submitted","setSubmitted","setCode","userInputtedCode","setUserInputtedCode","errorMessage","setErrorMessage","passwordVisibility","setPasswordVisibility","history","useHistory","useEffect","handleSignup","event","preventDefault","length","twilioService","then","handleCodeEntry","parseInt","push","pathname","state","loginService","usersCurrentDate","Date","messageDate","getFullYear","getMonth","getDate","messageid","String","uuidv4","timeDisplayMinutes","timeDisplayHours","timeOfDay","UTCHours","getUTCHours","UTCMinutes","onSubmit","paddingLeft","maxLength","onChange","Button","onClick","type","marginBottom","placeholder","required","clear","paddingRight","pattern","SignInPage","setUser","setEmail","setPassword","handleLogin","setItem","stringify","Welcome","props","location","textAlign","SuccessNotification","Message","id","currentMessages","setCurrentMessages","handleDeletedMessage","editedMessage","setEditedMessage","successMessage","setSuccessMessage","useTime","timeValues","setUTCHours","setUTCMinutes","date","minutes","hour","convert12HourClock","marginTop","defaultValue","map","time","setTimeout","confirm","filter","Messages","display","outerSuccessMessage","setOuterSuccessMessage","loggedUserJSON","messages","handleNewMessage","index","updatedMessages","AccountSettings","show","setShow","handleDelete","removeItem","handleClose","Modal","onHide","Header","closeButton","Title","Body","variant","Dashboard","setDisplay","DeletedAccount","Main","path","component","render","App","testForExpiredUser","loggedUser","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.06272a12.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/design.b747a1a5.png\";","import React from 'react'\r\nimport design from '../img/design.png'\r\n\r\nconst Home = () => {\r\n      return (\r\n        <>\r\n        <div className='container'>\r\n          <h1 className='title'>Wellness Wendell</h1>\r\n        </div>\r\n        <div className='reasons-container'>\r\n          <ul className='reasons'>\r\n            <li>Reminders</li>\r\n            <li>Wellness Messages</li>\r\n            <li>Combat loneliness with Wellness Wendell!</li>\r\n          </ul>\r\n        </div>\r\n        <div class='home-content'>\r\n          <img src={design} alt=\"graphic which shows a text message icon pointing to a heart icon. Wellness wendell messages are lovely!\" height=\"600\" width=\"500\"/>\r\n          <p className='text-left' style={{margin: 'auto', fontSize: 25}}>Use Wellness Wendell to send yourself reminder messages, wellness messages, or just get a friendly hello from Wellness Wendell all via text! Sign up for a free account today!</p>\r\n        </div>\r\n        </>\r\n      )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className='container about'>\r\n            <h1 className='title'>Wellness Wendell</h1>\r\n            <p>Wellness Wendell is a website where you can customize wellness messages sent to you via text. Please sign up for an account to start receiving messages, or view the demo video to see what having a Wellness Wendell account is like!</p>\r\n            <p className='text-center'>\r\n            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/UTPakLlPmR8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\r\n            <p>Wellness Wendell was created by <a href='http://jadalilleboe.github.io'>Jada Lilleboe</a>, a computer science student at the University of Minnesota. Check out the github repository for this application.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navigation = ({ user }) => {\r\n    const linkStyle = {\r\n        textDecoration: 'none'\r\n    }\r\n    if (user === '') {\r\n        return (\r\n            <div className='non-user-nav container'>\r\n                <NavLink exact to='/' style={linkStyle}><li className='nav-item'>Home</li></NavLink>\r\n                <NavLink exact to='/about' style={linkStyle}><li className='nav-item'>About</li></NavLink>\r\n                <NavLink exact to='/signup' style={linkStyle}><li className='nav-item'>Sign up</li></NavLink>\r\n                <NavLink exact to='/signin' style={linkStyle}><li className='nav-item'>Sign in</li></NavLink>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='user-nav container'>\r\n                <NavLink exact to='/' style={linkStyle}><li className='nav-item'>Home</li></NavLink>\r\n                <NavLink exact to='/' style={linkStyle}><li className='nav-item'>About</li></NavLink>\r\n                <NavLink exact to='/dashboard' style={linkStyle}><li className='nav-item'>Change Wendell's messages</li></NavLink>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n            <p className='p-3'>©2021 Wellness Wendell inc.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import { useState } from 'react'\r\n\r\nexport const usePhoneNumber = (initialValues) => {\r\n    const [ values, setValues ] = useState(initialValues)\r\n\r\n    return [\r\n        values,\r\n        e => {\r\n            setValues({\r\n                ...values,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    ]\r\n}","import axios from 'axios'\r\nconst baseUrl = '/api/text-messages'\r\n\r\nconst sendMessage = async number => {\r\n    const response = await axios.post(baseUrl, { number: number })\r\n    return response.data.code\r\n}\r\n\r\nconst services = { sendMessage }\r\n\r\nexport default services","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\n\r\nconst createUser = async userObject => {\r\n    const response = await axios.post(baseUrl, userObject)\r\n    return response.data\r\n}\r\n\r\nconst updatePhoneNumber = async newNumber => {\r\n    let token = window.localStorage.getItem('loggedWWUser') ? `bearer ${JSON.parse(window.localStorage.getItem('loggedWWUser')).token}` : null\r\n    const response = await axios.put(baseUrl, {newNumber: newNumber}, { headers: { 'Authorization': token } })\r\n    return response.data\r\n}   \r\n\r\nconst deleteUser = async () => {\r\n    let token = window.localStorage.getItem('loggedWWUser') ? `bearer ${JSON.parse(window.localStorage.getItem('loggedWWUser')).token}` : null\r\n    const response = await axios.delete(baseUrl, { headers: { 'Authorization': token } })\r\n    return response.data\r\n}\r\n\r\nconst verifyUniqueEmail = async email => {\r\n    const response = await axios.post(`${baseUrl}/verify`, {thisemail: email})\r\n    return response.data\r\n}\r\n\r\nconst userService = {\r\n    createUser,\r\n    updatePhoneNumber,\r\n    deleteUser,\r\n    verifyUniqueEmail\r\n}\r\n\r\nexport default userService","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nconst loginServices = {\r\n    login\r\n}\r\n\r\nexport default loginServices","import axios from 'axios'\r\nconst baseUrl = '/api/messages'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getUserMessages = async () => {\r\n    try { const response = await axios.get(baseUrl, { headers: { 'Authorization': token } })\r\n    return response.data\r\n    } catch {\r\n        return null\r\n    }\r\n} \r\n\r\nconst saveMessage = async messageObject => {\r\n    const response = await axios.put(baseUrl, messageObject, { headers: { 'Authorization' : token } })\r\n    return response.data\r\n}\r\n\r\nconst deleteMessage = async messageID => {\r\n    const response = await axios.delete(`${baseUrl}/${messageID}`, { headers: { 'Authorization' : token } })\r\n    return response.data\r\n}\r\n\r\nconst messageService = { setToken, token, getUserMessages, saveMessage, deleteMessage }\r\n\r\nexport default messageService","import React from 'react'\r\n\r\nconst ErrorNotification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"alert alert-danger\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorNotification","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { usePhoneNumber } from './hooks/usePhoneNumber'\r\nimport { useForm } from './hooks/useForm'\r\nimport Button from 'react-bootstrap/button'\r\nimport twilioService from '../services/twilio'\r\nimport userService from '../services/users'\r\nimport loginService from '../services/login'\r\nimport messageService from '../services/messages'\r\nimport ErrorNotification from './ErrorNotification'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nconst SignUpPage = () => {\r\n    const [ values, handleChange ] = useForm({ firstName: '', lastName: '', email: '', password: '', retypedPassword: ''})\r\n    const [ phoneNumber, setPhoneNumber ] = useState('')\r\n    const [ phoneValues, handleNumberChange ] = usePhoneNumber({ areaPrefix: '+1', first3: '', middle3: '', last4: '' })\r\n    const [ submitted, setSubmitted ] = useState(false)\r\n    const [ code, setCode ] = useState(0)\r\n    const [ userInputtedCode, setUserInputtedCode ] = useState('')\r\n    const [ errorMessage, setErrorMessage ] = useState(null)\r\n    const [ passwordVisibility, setPasswordVisibility ] = useState('password')\r\n\r\n    const history = useHistory()\r\n    \r\n    useEffect(() => {\r\n        setPhoneNumber(phoneValues.areaPrefix +  phoneValues.first3 + phoneValues.middle3 + phoneValues.last4)\r\n    }, [phoneValues.areaPrefix, phoneValues.first3, phoneValues.middle3, phoneValues.last4])\r\n    \r\n    const handleSignup = async (event) => {\r\n        setErrorMessage(null)\r\n        event.preventDefault()\r\n\r\n        if (values.password !== values.retypedPassword) {\r\n            setErrorMessage(\"Passwords don't match, please try again.\")\r\n        } else if (values.password.length < 8 ){\r\n            setErrorMessage('Password must be at least 8 characters long.')\r\n        } else {\r\n            const checkUniqueEmail = await userService.verifyUniqueEmail(values.email)\r\n            if (!checkUniqueEmail) {\r\n                setErrorMessage(null)\r\n                setSubmitted(true)\r\n                twilioService.sendMessage(phoneNumber)\r\n                .then(code => {\r\n                    setCode(code)\r\n                })\r\n            } else {\r\n                setErrorMessage(\"A Wellness Wendell account has already been registered with that e-mail address.\")\r\n            }\r\n        }\r\n    }\r\n    \r\n    const handleCodeEntry = async (event) => {\r\n        event.preventDefault()\r\n        if (parseInt(userInputtedCode) === code) {\r\n            history.push({\r\n                pathname: '/welcome', \r\n                state: { \r\n                    name: values.firstName \r\n                }\r\n            })\r\n            await userService.createUser({\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                password: values.password,\r\n                phoneNumber: phoneNumber\r\n            })\r\n            const user = await loginService.login({\r\n                email: values.email, password: values.password\r\n            })\r\n            messageService.setToken(user.token)\r\n            const usersCurrentDate = new Date()\r\n            const messageDate = new Date(usersCurrentDate.getFullYear(), usersCurrentDate.getMonth(), usersCurrentDate.getDate(), 9, 0)\r\n            messageService.saveMessage({\r\n                messageid: String(uuidv4()),\r\n                message: `Hi ${values.firstName}! Just checking in you to see how you are... Have a good day! Love, Wellness Wendell`,\r\n                timeDisplayMinutes: ':00',\r\n                timeDisplayHours: 9,\r\n                timeOfDay: 'AM',\r\n                UTCHours: messageDate.getUTCHours(),\r\n                UTCMinutes: 0\r\n            })\r\n            messageService.saveMessage({\r\n                messageid: String(uuidv4()),\r\n                message: `${values.firstName}, don't forget to drink some water today! Being hydrated is extremely important to your overall well-being :) Hope your day's going well! Love, Wellness Wendell`,\r\n                timeDisplayMinutes: ':00',\r\n                timeDisplayHours: 1,\r\n                timeOfDay: 'PM',\r\n                UTCHours: messageDate.getUTCHours() + 4,\r\n                UTCMinutes: 0\r\n            })\r\n            messageService.saveMessage({\r\n                messageid: String(uuidv4()),\r\n                message: `Remember to get some sort of exercise in today, ${values.firstName}! I recommend doing some yoga or going for a walk. Being active is a key component of physical and mental wellbeing! Love, Wellness Wendell`,\r\n                timeDisplayMinutes: ':00',\r\n                timeDisplayHours: 5,\r\n                timeOfDay: 'PM',\r\n                UTCHours: messageDate.getUTCHours() + 8,\r\n                UTCMinutes: 0\r\n            })\r\n        } else {\r\n            setErrorMessage('The code is not correct. Please try again.')\r\n            setUserInputtedCode('')\r\n        }\r\n    }\r\n\r\n    const handleResend = () => {\r\n        twilioService.sendMessage(phoneNumber)\r\n        .then(code => {\r\n            setCode(code)\r\n        })\r\n    }\r\n\r\n    if (!submitted) {\r\n        return (\r\n            <div className='container' style={{marginBottom: 20}}>\r\n                <h1 className='subheading'>Sign up to get messages from Wellness Wendell :)</h1>\r\n                <div className='form'>\r\n                <form className='container-sm text-left' onSubmit={handleSignup}>\r\n                    <div className='form-group'>\r\n                        <label>First Name</label>\r\n                        <input value={values.firstName} onChange={handleChange} placeholder='John' name='firstName' required style={{width: '100%', clear: 'both'}}></input>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Last Name</label>\r\n                        <span className='text-center'>\r\n                        <input value={values.lastName} onChange={handleChange} placeholder='Smith' name='lastName' required></input>\r\n                        </span>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Email</label>\r\n                        <input value={values.email} type='email' onChange={handleChange} placeholder='johnsmith@gmail.com' name='email' required></input>\r\n                    </div>\r\n                    <ErrorNotification message={errorMessage} />\r\n                    <div className='form-group'>\r\n                        <label>Password</label>\r\n                        <input type={passwordVisibility} onChange={handleChange} name='password'/>\r\n                        <span className='show-btn' onClick={() => passwordVisibility === 'password' ? setPasswordVisibility('text') : setPasswordVisibility('password')}>{passwordVisibility === 'password' ? 'Show' : 'Hide'}</span>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Re-Type Password</label>\r\n                        <input type={passwordVisibility} onChange={handleChange} name='retypedPassword'/>\r\n                        <span className='show-btn' onClick={() => passwordVisibility === 'password' ? setPasswordVisibility('text') : setPasswordVisibility('password')}>{passwordVisibility === 'password' ? 'Show' : 'Hide'}</span>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <span style={{paddingRight: 5}}><label>Phone Number</label></span>\r\n                        <span style={{paddingRight: 5}}><select onChange={handleNumberChange} name='areaPrefix'>\r\n                            <option value='+1'>+1</option>\r\n                            <option value='+44'>+44</option>\r\n                        </select></span>\r\n                        <input pattern='[0-9]{3}' type='tel' maxLength='3' placeholder='888' style={{width: '50px'}} required onChange={handleNumberChange} name='first3'/>-\r\n                        <input type='tel' maxLength='3' pattern='[0-9]{3}' placeholder='888' style={{width: '50px'}} required onChange={handleNumberChange} name='middle3'/>- \r\n                        <input type='tel' maxLength='4' pattern='[0-9]{4}' placeholder='8888' style={{width: '60px'}} required onChange={handleNumberChange} name='last4'/>\r\n                    </div>\r\n                    <div className='submit-button text-center'>\r\n                        <Button type='submit' class='btn'>Submit</Button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='text-center'>\r\n                <h1 className='subheading'>Hi {values.firstName}!</h1>\r\n                <p>We've sent a one-time code to your phone number.</p>\r\n                <ErrorNotification message={errorMessage} />\r\n                <form onSubmit={handleCodeEntry}>\r\n                    <label>Please enter the code to verify your phone number: </label>\r\n                    <span style={{paddingLeft: 10}}><input value={userInputtedCode} maxLength='4' onChange={({ target }) => setUserInputtedCode(target.value)}/></span>\r\n                    <Button onClick={handleResend} className='m-3'>Resend Code</Button><br />\r\n                <Button type='submit' className='m-2'>Submit</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUpPage","import { useState } from 'react'\r\n\r\nexport const useForm = (initialValues) => {\r\n    const [ values, setValues ] = useState(initialValues)\r\n\r\n    return [\r\n        values,\r\n        e => {\r\n            setValues({\r\n                ...values,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    ]\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/button'\r\nimport loginService from '../services/login'\r\nimport messageService from '../services/messages'\r\nimport ErrorNotification from './ErrorNotification'\r\n\r\nconst SignInPage = ({ setUser }) => {\r\n    const [ email, setEmail ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n    const [ errorMessage, setErrorMessage ] = useState(null)\r\n    const [ passwordVisibility, setPasswordVisibility ] = useState('password')\r\n\r\n    const history = useHistory()\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            const user = await loginService.login({\r\n                email, password\r\n            })\r\n\r\n            window.localStorage.setItem(\r\n                'loggedWWUser', JSON.stringify(user)\r\n            )\r\n            setUser(user)\r\n            messageService.setToken(user.token)\r\n            history.push('/dashboard')\r\n        } catch (exception) {\r\n            setErrorMessage('The email or password is incorrect.')\r\n        }\r\n    }\r\n    return (\r\n        <div style={{marginBottom: 20}}>\r\n            <h1 className='subheading'>Sign in</h1>\r\n            <ErrorNotification message={errorMessage} />\r\n            <div className='form'>\r\n            <form className='container-sm text-left'onSubmit={handleLogin}>\r\n                <div class=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input value={email} type='email' name='email' onChange={({ target }) => setEmail(target.value)} className='input-field'/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input value={password} type={passwordVisibility} onChange={({ target }) => setPassword(target.value)}/>\r\n                    <span className='show-btn' onClick={() => passwordVisibility === 'password' ? setPasswordVisibility('text') : setPasswordVisibility('password')}>{passwordVisibility === 'password' ? 'Show' : 'Hide'}</span>\r\n                </div>\r\n                <div class='text-center'>\r\n                <Button type='submit'>Submit</Button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignInPage","import React from 'react'\r\nimport Button from 'react-bootstrap/button'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Welcome = (props) => {\r\n    if (props.location.state) {\r\n        return (\r\n            <div style={{textAlign: 'center'}}>\r\n                <h1 className='subheading'>Welcome to Wellness Wendell {props.location.state.name}!</h1>\r\n                <p>Please sign in to get started.</p>\r\n                <NavLink exact to='/signin'><Button className='mb-3'>Sign in</Button></NavLink>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h1>Please sign up for a Wellness Wendell account.</h1>\r\n                <NavLink exact to='/signup'><Button>Sign up</Button></NavLink>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Welcome","import React from 'react'\r\n\r\nconst SuccessNotification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"alert alert-primary\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessNotification","import React, { useState, useEffect } from 'react'\r\nimport SuccessNotification from '../SuccessNotification'\r\nimport messageService from '../../services/messages'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { useTime } from '../hooks/useTime'\r\n\r\nconst convert12HourClock = (hour, timeOfDay) => {\r\n    if (hour === 12 && timeOfDay === 'AM') {\r\n        return 24\r\n    } else if (hour !== 12 && timeOfDay === 'PM') {\r\n        return 12 + hour\r\n    } else {\r\n        return hour\r\n    }\r\n}\r\n\r\nconst Message = ({ id, message, timeDisplayHours, timeDisplayMinutes, timeOfDay,currentMessages, setCurrentMessages, handleDeletedMessage }) => {\r\n    const [ editedMessage, setEditedMessage ] = useState(message)\r\n    const [ successMessage, setSuccessMessage ] = useState(null)\r\n    const [ timeValues, handleChange ] = useTime({ timeDisplayHours: timeDisplayHours, timeDisplayMinutes: timeDisplayMinutes, timeOfDay: timeOfDay})\r\n    const [ UTCHours, setUTCHours ] = useState(null)\r\n    const [ UTCMinutes, setUTCMinutes ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const date = new Date()\r\n        const minutes = timeValues.timeDisplayMinutes === ':00' ? 0 : 30\r\n        const messageDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), convert12HourClock(timeValues.timeDisplayHours, timeValues.timeOfDay), minutes)\r\n        setUTCHours(messageDate.getUTCHours())\r\n        setUTCMinutes(minutes)\r\n    }, [timeValues])\r\n\r\n    const handleSave = () => {\r\n        messageService.saveMessage({\r\n            messageid: id,\r\n            message: editedMessage,\r\n            timeDisplayMinutes: timeValues.timeDisplayMinutes,\r\n            timeDisplayHours: timeValues.timeDisplayHours,\r\n            timeOfDay: timeValues.timeOfDay,\r\n            UTCHours: UTCHours,\r\n            UTCMinutes: UTCMinutes\r\n        })\r\n        setSuccessMessage('Message saved.')\r\n        setTimeout(() => {\r\n            setSuccessMessage(null)\r\n        }, 5000)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        if (window.confirm(\"Delete message?\")) {\r\n            handleDeletedMessage()\r\n            messageService.deleteMessage(id)\r\n            setCurrentMessages(currentMessages.filter(message => message.messageid !== id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"msg\">\r\n            <SuccessNotification message={successMessage} />\r\n            <span style={{marginTop: 20}}><textarea type=\"text\" value={editedMessage} style={{width: '100%'}} onChange={({ target }) => setEditedMessage(target.value)}/></span>\r\n            <select name=\"timeDisplayHours\" defaultValue={timeValues.timeDisplayHours} onChange={handleChange} className='ml-2'>\r\n                {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(time => {\r\n                    return (<option value={time} key={time}>{time}</option>)\r\n                })}\r\n            </select>\r\n            <select name=\"timeDisplayMinutes\" onChange={handleChange} defaultValue={timeValues.timeDisplayMinutes}>\r\n                <option value=\":00\">:00</option>\r\n                <option value=\":30\">:30</option>\r\n            </select>\r\n            <select name=\"timeOfDay\" onChange={handleChange} defaultValue={timeValues.timeOfDay}>\r\n                <option value=\"AM\">AM</option>\r\n                <option value=\"PM\">PM</option>\r\n            </select>\r\n            <button className='btn m-2' onClick={handleSave}>Save Message</button>\r\n            <button className='btn' onClick={handleDelete}>Delete Message</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Messages = ({ display }) => {\r\n    const [ currentMessages, setCurrentMessages ] = useState([])\r\n    const [ outerSuccessMessage, setOuterSuccessMessage ] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedWWUser')\r\n        if (loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            messageService.setToken(user.token)\r\n        }\r\n      }, [])\r\n      \r\n    useEffect(() => {\r\n        messageService.getUserMessages().then(messages => setCurrentMessages(messages))\r\n    }, [])\r\n\r\n    const handleNewMessage = () => {\r\n        setCurrentMessages([...currentMessages, {message: '', messageid: String(uuidv4()), timeDisplayHours: 9, timeDisplayMinutes: ':00', timeOfDay: 'AM'}])\r\n    }\r\n\r\n    const handleDeletedMessage = () => {\r\n        setOuterSuccessMessage('Message deleted.')\r\n        setTimeout(() => {\r\n            setOuterSuccessMessage(null)\r\n        }, 5000)\r\n    }\r\n\r\n    if (display === 'messages' && currentMessages.length !== 0) {\r\n        return (\r\n            <div>\r\n            <h1 className='subheading'>Messages</h1>\r\n            <SuccessNotification message={outerSuccessMessage}/>\r\n            {currentMessages.map((message, index) =>\r\n                <Message key={index} id={message.messageid} message={message.message} timeDisplayHours={message.timeDisplayHours} timeDisplayMinutes={message.timeDisplayMinutes} timeOfDay={message.timeOfDay} currentMessages={currentMessages} setCurrentMessages={updatedMessages => setCurrentMessages(updatedMessages)} handleDeletedMessage={handleDeletedMessage}/>\r\n                )}\r\n            <button className='btn m-2' onClick={handleNewMessage}>Add new message</button>\r\n            </div>\r\n        \r\n        )\r\n    } else if (display === 'messages' && currentMessages.length === 0) {\r\n        return (\r\n            <>\r\n            <SuccessNotification message={outerSuccessMessage}/>\r\n            <h1 className='subheading'>Messages</h1>\r\n            <p class='m-2'>You currently don't have any Wellness Wendell messages.</p>\r\n            <button class='btn m-2' onClick={handleNewMessage}>Add new message</button>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Messages","import { useState } from 'react'\r\n\r\nexport const useTime = (initialValues) => {\r\n    const [ values, setValues ] = useState(initialValues)\r\n\r\n    return [\r\n        values,\r\n        e => {\r\n            setValues({\r\n                ...values,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    ]\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { usePhoneNumber } from '../hooks/usePhoneNumber'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {Button, Modal} from 'react-bootstrap'\r\nimport SuccessNotification from '../SuccessNotification'\r\nimport userService from '../../services/users'\r\n\r\nconst AccountSettings = ({ display }) => {\r\n    const [ successMessage, setSuccessMessage ] = useState(null)\r\n    const [ phoneNumber, setPhoneNumber ] = useState('')\r\n    const [ phoneValues, handleNumberChange ] = usePhoneNumber({ areaPrefix: '+1', first3: '', middle3: '', last4: '' })\r\n    const [show, setShow] = useState(false)\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        setPhoneNumber(phoneValues.areaPrefix +  phoneValues.first3 + phoneValues.middle3 + phoneValues.last4)\r\n    }, [phoneValues.areaPrefix, phoneValues.first3, phoneValues.middle3, phoneValues.last4])\r\n\r\n    const handleNewNumber = () => {\r\n        userService.updatePhoneNumber(phoneNumber)\r\n        setSuccessMessage('Updated successfully.')\r\n        setTimeout(() => {\r\n            setSuccessMessage(null)\r\n        }, 5000)\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        await userService.deleteUser()\r\n        window.localStorage.removeItem('loggedWWUser')\r\n        history.push('/delete')\r\n    }\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n\r\n    if (display === 'settings') {\r\n        return (\r\n            <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Are you sure you want to delete your account?</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>This is a permanent, destructive action.</Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleDelete}>\r\n                    Delete Account\r\n                </Button>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <h1 className='subheading'>Settings</h1>\r\n            <SuccessNotification message={successMessage}/>\r\n            <div>\r\n                <span style={{paddingLeft: 5}}><label>Change Phone Number</label></span>\r\n                <span style={{paddingRight: 5, paddingLeft: 5}}><select name='areaPrefix' onChange={handleNumberChange}>\r\n                    <option value='+1'>+1</option>\r\n                    <option value='+44'>+44</option>\r\n                </select></span>\r\n                <input pattern='[0-9]{3}' type='tel' maxLength='3' style={{width: '50px'}} required name='first3' onChange={handleNumberChange}/>-\r\n                <input type='tel' maxLength='3' pattern='[0-9]{3}' style={{width: '50px'}} required name='middle3' onChange={handleNumberChange}/>- \r\n                <input type='tel' maxLength='4' pattern='[0-9]{4}' style={{width: '60px'}} required name='last4' onChange={handleNumberChange}/>\r\n                <button class ='btn mb-2 ml-2 mr-2' onClick={handleNewNumber}>Save</button>\r\n            </div>\r\n            <div className='text-center m-3'>\r\n            <Button className='text-center'onClick={handleShow}>Delete account</Button></div>\r\n            </>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default AccountSettings","import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/button'\r\nimport Messages from './dashboardComponents/Messages'\r\nimport AccountSettings from './dashboardComponents/AccountSettings'\r\n\r\nconst Dashboard = () => {\r\n    const [ display, setDisplay ] = useState('messages')\r\n\r\n    return (\r\n        <div className='dashboard'>\r\n            <div className='dashboard-nav'>\r\n                <Button className='db-button' onClick={() => setDisplay('messages')}>Change Wendell's messages</Button>\r\n                <Button className='db-button' onClick={() => setDisplay('settings')}>Account Settings</Button>\r\n            </div>\r\n            <div className='dashboard-content'>\r\n                <Messages display={display}/>\r\n                <AccountSettings display={display} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { useEffect } from 'react'\r\nimport Button from 'react-bootstrap/button'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DeletedAccount = ({ setUser }) => {\r\n    useEffect(() => setUser(''))\r\n    return (\r\n    <div style={{textAlign: 'center'}}>\r\n    <h1 class='subheading'>Wellness Wendell is sad to see you go!</h1>\r\n    <NavLink exact to='/signup'><Button className='m-3'>Sign up for an account</Button></NavLink>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DeletedAccount","import './App.css'\r\nimport React, { useState, useEffect } from 'react'\r\nimport Home from './components/Home'\r\nimport About from './components/About'\r\nimport Navigation from './components/Navigation'\r\nimport Footer from './components/Footer'\r\nimport SignUpPage from './components/SignUpPage'\r\nimport SignInPage from './components/SignInPage'\r\nimport Welcome from './components/Welcome'\r\nimport Dashboard from './components/Dashboard'\r\nimport DeletedAccount from './components/DeletedAccount'\r\nimport messageService from './services/messages'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nconst Main = ({ user, setUser }) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={Home} />\r\n      <Route exact path='/about' component={About} />\r\n      <Route exact path='/signup' component={SignUpPage} />\r\n      <Route exact path='/signin' render={() => (\r\n        <SignInPage setUser={setUser} />\r\n      )} />\r\n      <Route exact path = '/welcome' component={Welcome} />\r\n      <Route exact path = '/dashboard' component={Dashboard} />\r\n      <Route exact path = '/delete' render={() => (\r\n        <DeletedAccount setUser={setUser} />\r\n      )} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [ user, setUser ] = useState('')\r\n  \r\n  useEffect(() => {\r\n    const testForExpiredUser = async () => {\r\n      const loggedUserJSON = window.localStorage.getItem('loggedWWUser')\r\n      if (loggedUserJSON) {\r\n          const test = await messageService.getUserMessages()\r\n          if (test !== null){ \r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            messageService.setToken(user.token)\r\n          } else {\r\n            window.localStorage.removeItem('loggedWWUser')\r\n          }\r\n      }\r\n    }\r\n    testForExpiredUser()\r\n  }, [])\r\n  \r\n  return (\r\n    <div>\r\n      <Navigation user={user} />\r\n      <Main user={user} setUser={(loggedUser) => setUser(loggedUser)} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}